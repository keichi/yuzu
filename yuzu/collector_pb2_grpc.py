# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import collector_pb2 as collector__pb2


class YuzuCollectorStub(object):
    """Missing associated documentation comment in .proto file"""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ReportTimer = channel.unary_unary(
                '/YuzuCollector/ReportTimer',
                request_serializer=collector__pb2.TimerTelemetry.SerializeToString,
                response_deserializer=collector__pb2.TelemetryReply.FromString,
                )
        self.ReportDataSize = channel.unary_unary(
                '/YuzuCollector/ReportDataSize',
                request_serializer=collector__pb2.DataSizeTelemetry.SerializeToString,
                response_deserializer=collector__pb2.TelemetryReply.FromString,
                )


class YuzuCollectorServicer(object):
    """Missing associated documentation comment in .proto file"""

    def ReportTimer(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportDataSize(self, request, context):
        """Missing associated documentation comment in .proto file"""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_YuzuCollectorServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ReportTimer': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportTimer,
                    request_deserializer=collector__pb2.TimerTelemetry.FromString,
                    response_serializer=collector__pb2.TelemetryReply.SerializeToString,
            ),
            'ReportDataSize': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportDataSize,
                    request_deserializer=collector__pb2.DataSizeTelemetry.FromString,
                    response_serializer=collector__pb2.TelemetryReply.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'YuzuCollector', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class YuzuCollector(object):
    """Missing associated documentation comment in .proto file"""

    @staticmethod
    def ReportTimer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/YuzuCollector/ReportTimer',
            collector__pb2.TimerTelemetry.SerializeToString,
            collector__pb2.TelemetryReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportDataSize(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/YuzuCollector/ReportDataSize',
            collector__pb2.DataSizeTelemetry.SerializeToString,
            collector__pb2.TelemetryReply.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
